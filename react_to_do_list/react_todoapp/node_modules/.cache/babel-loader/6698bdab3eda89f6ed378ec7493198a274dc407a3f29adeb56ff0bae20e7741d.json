{"ast":null,"code":"var _jsxFileName = \"D:\\\\myfinalproject\\\\react_to_do_list\\\\react_todoapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTask = ({\n  task,\n  afterUpdate\n}) => {\n  _s();\n  const [editedTask, setEditedTask] = useState({\n    ...task\n  });\n  useEffect(() => {\n    setEditedTask({\n      ...task\n    });\n  }, [task]);\n  const handleInput = event => {\n    setEditedTask(prevTask => ({\n      ...prevTask,\n      [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.targetvalue\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8000/apis/todolist/${editedTask.id}/`, {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(editedTask)\n      });\n      if (response.ok) {\n        const updatedTodo = await response.json();\n        afterUpdate(updatedTodo);\n        window.location.reload();\n        alert(\"task updated sucessfully...\");\n      } else {\n        console.error(\"failed to update task\");\n      }\n    } catch (error) {\n      console.error(\"Error :\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mt-4\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"title\",\n          placeholder: \"Enter Task title\",\n          name: \"title\",\n          value: editedTask.title,\n          required: true,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"description\",\n          placeholder: \"Task description\",\n          name: \"description\",\n          value: editedTask.description,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        children: \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n};\n_s(EditTask, \"joR6OOqzRxgqAkSvjwPSgkWSjQQ=\");\n_c = EditTask;\nexport default EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EditTask","task","afterUpdate","_s","editedTask","setEditedTask","handleInput","event","prevTask","target","name","type","checked","targetvalue","handleSubmit","preventDefault","response","fetch","id","method","headers","body","JSON","stringify","ok","updatedTodo","json","window","location","reload","alert","console","error","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","title","required","onChange","description","_c","$RefreshReg$"],"sources":["D:/myfinalproject/react_to_do_list/react_todoapp/src/App.js"],"sourcesContent":["import React,{useEffect, useState} from \"react\";\nconst EditTask=({task,afterUpdate})=>\n{\n    const[editedTask,setEditedTask]=useState({...task})\n    useEffect(()=>\n    {\n        setEditedTask({...task});\n    },[task]);\n      \n    const handleInput=(event)=>\n    {\n        setEditedTask((prevTask)=>({\n            ...prevTask,\n            [event.target.name]:(event.target.type===\"checkbox\")?event.target.checked:event.targetvalue\n        }));\n    }\n\n    const handleSubmit=async(event)=>\n    {\n        event.preventDefault();\n        try{\n            const response = await fetch(`http://localhost:8000/apis/todolist/${editedTask.id}/`,{\n                method:'PUT',\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                },\n                body:JSON.stringify(editedTask)\n            })\n           if(response.ok)\n           {\n            const updatedTodo=await response.json();\n            afterUpdate(updatedTodo);\n            window.location.reload();\n            alert(\"task updated sucessfully...\")\n           }\n           else{\n            console.error(\"failed to update task\")\n           }\n        }\n           catch(error)\n           {\n            console.error(\"Error :\",error)\n           }\n        };\n\n        \n        \n        return(\n            <div>\n            <form className=\"mt-4\" onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" className=\"form-control\" id=\"title\"\n                placeholder=\"Enter Task title\" name=\"title\" value={editedTask.title}\n                required \n                onChange={handleInput}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea className=\"form-control\" id=\"description\"\n                placeholder=\"Task description\" name=\"description\" value={editedTask.description}\n                onChange={handleInput}/>\n            </div>\n\n           \n            <button type=\"submit\" className=\"btn btn-success\">Update Task</button>\n\n            </form>\n\n          </div>  \n        );\n    };\n\nexport default EditTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}